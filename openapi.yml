openapi: 3.0.1
info:
  title: BitSky Supplier
  description: Decentralized Task Agency
  termsOfService: http://swagger.io/terms/
  contact:
    email: help.bitskyai@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:9099/
tags:
  - name: retailer
    description: Service of Task
  - name: server
    description: Decentralized Task Agency
  - name: tasks
    description: Tasks want to collect
paths:
  /apis/retailers:
    get:
      tags:
        - retailer
      summary: Get a list of Retailers
      description: Operation Index - 0011
      operationId: getRetailers
      responses:
        200:
          description: Get Retailers successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./src/schemas/retailer.json"
    post:
      tags:
        - retailer
      summary: Register a Retailer.
      description: Operation Index - 0001
      operationId: registerRetailer
      requestBody:
        description: Need to register Retailer information
        required: true
        content:
          application/json:
            schema:
              $ref: "./src/schemas/retailer.json"
      responses:
        200:
          description: Registered successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    description: Generate MongoDB Id
                  global_id:
                    $ref: "#/components/schemas/GlobalId"
        400:
          description: Bad request, the data pass isn't valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /apis/retailers/{gid}:
    get:
      tags:
        - retailer
      summary: Get a Retailer.
      description: Operation Index - 0002
      operationId: getRetailer
      parameters:
        - in: path
          name: gid
          required: true
          description: global_id of Retailer
          schema:
            $ref: "#/components/schemas/GlobalId"
      responses:
        200:
          description: Get a Retailer successful
          content:
            application/json:
              schema:
                $ref: "./src/schemas/retailer.json"
        400:
          description: Bad request, the data pass isn't valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: Cannot find specific Retailer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - retailer
      summary: Update a Retailer
      description: Operation Index - 0003
      operationId: updateRetailer
      parameters:
        - in: path
          name: gid
          required: true
          description: global_id of Retailer
          schema:
            $ref: "#/components/schemas/GlobalId"
      requestBody:
        description: Retailer information need to update
        required: true
        content:
          application/json:
            schema:
              $ref: "./src/schemas/retailer.json"
      responses:
        204:
          description: Update Retailer successful
        404:
          description: Cannot find specific Retailer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - retailer
      summary: Unregister a Retailer
      description: Operation Index - 0004
      operationId: unregisterRetailer
      parameters:
        - in: path
          name: gid
          required: true
          description: global_id of Retailer
          schema:
            $ref: "#/components/schemas/GlobalId"
      responses:
        200:
          description: Delete Retailer successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  global_id:
                    $ref: "#/components/schemas/GlobalId"
        404:
          description: Cannot find specific Retailer
          content:
            application/json:
              schema:
                type: object
                properties:
                  global_id:
                    $ref: "#/components/schemas/GlobalId"
  /apis/retailers/{gid}/status:
    put:
      tags:
        - retailer
      summary: Update a Retailer status
      description: Operation Index - 0010
      operationId: updateRetailerStatus
      parameters:
        - in: path
          name: gid
          required: true
          description: global_id of Retailer
          schema:
            $ref: "#/components/schemas/GlobalId"
      responses:
        200:
          description: Update a Retailer successful
          content:
            application/json:
              schema:
                $ref: "./src/schemas/retailer.json"
        400:
          description: Bad request, the data pass isn't valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: Cannot find specific Retailer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /apis/producers:
    get:
      tags:
        - producer
      description: Operation Index - 0012
      operationId: getProducers
      responses:
        200:
          description: Get Producers successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./src/schemas/producer.json"
    post:
      tags:
        - producer
      summary: Register an Producer.
      description: Operation Index - 0013
      operationId: registerProducer
      requestBody:
        description: Need to register Producer information
        required: true
        content:
          application/json:
            schema:
              $ref: "./src/schemas/producer.json"
      responses:
        200:
          description: Registered successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    description: Generate MongoDB Id
                  global_id:
                    $ref: "#/components/schemas/GlobalId"
        400:
          description: Bad request, the data pass isn't valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /apis/producers/{gid}:
    get:
      tags:
        - producer
      summary: Get an Producer
      description: Operation Index - 0014
      operationId: getProducer
      parameters:
        - in: path
          name: gid
          required: true
          description: global_id of Producer
          schema:
            $ref: "#/components/schemas/GlobalId"
      responses:
        200:
          description: Get an producer successful
          content:
            application/json:
              schema:
                $ref: "./src/schemas/producer.json"
        400:
          description: Bad request, the data pass isn't valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: Cannot find specific Producer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - producer
      summary: Update an Producer
      description: Operation Index - 0015
      operationId: updateProducer
      parameters:
        - in: path
          name: gid
          required: true
          description: global_id of Producer
          schema:
            $ref: "#/components/schemas/GlobalId"
      requestBody:
        description: Producer information need to update
        required: true
        content:
          application/json:
            schema:
              $ref: "./src/schemas/producer.json"
      responses:
        204:
          description: Update Producer successful
        404:
          description: Cannot find specific Producer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - producer
      summary: Unregister an Producer
      description: Operation Index - 0016
      operationId: unregisterProducer
      parameters:
        - in: path
          name: gid
          required: true
          description: global_id of Producer
          schema:
            $ref: "#/components/schemas/GlobalId"
      responses:
        200:
          description: Delete Producer successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  global_id:
                    $ref: "#/components/schemas/GlobalId"
        404:
          description: Cannot find specific Producer
          content:
            application/json:
              schema:
                type: object
                properties:
                  global_id:
                    $ref: "#/components/schemas/GlobalId"
  /apis/producers/{gid}/activate:
    post:
      tags:
        - producer
      summary: Activate an Producer status
      description: Operation Index - 0017
      operationId: activateProducerStatus
      parameters:
        - in: path
          name: gid
          required: true
          description: global_id of producer
          schema:
            $ref: "#/components/schemas/GlobalId"
      responses:
        200:
          description: Update a Producer successful
          content:
            application/json:
              schema:
                $ref: "./src/schemas/producer.json"
        400:
          description: Bad request, the data pass isn't valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: Cannot find specific Producer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /apis/producers/{gid}/deactivate:
    post:
      tags:
        - producer
      summary: Activate an Producer status
      description: Operation Index - 0018
      operationId: deactivateProducerStatus
      parameters:
        - in: path
          name: gid
          required: true
          description: global_id of producer
          schema:
            $ref: "#/components/schemas/GlobalId"
      responses:
        200:
          description: Update a Producer successful
          content:
            application/json:
              schema:
                $ref: "./src/schemas/producer.json"
        400:
          description: Bad request, the data pass isn't valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: Cannot find specific Producer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /apis/manangement/tasks:
    get:
      tags:
        - tasks
      summary: Get tasks
      description: Operation Index - 0019
      operationId: getTasksForManagement
      parameters:
        - in: query
          name: cursor
          description: Current
          schema:
            $ref: "#/components/schemas/Cursor"
        - in: query
          name: limit
          description: How many tasks for each page
          schema:
            type: integer
            default: 50
        - in: query
          name: url
          description: URL string want to search
          schema:
            type: string
        - in: query
          name: state
          description: search task's state that is contained state.
          schema:
            type: string
            example:
              - PAUSED,TIMEOUT
      responses:
        200:
          description: Get tasks successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - tasks
                properties:
                  previousCursor:
                    $ref: "#/components/schemas/Cursor"
                  nextCursor:
                    $ref: "#/components/schemas/Cursor"
                  total:
                    type: integer
                    description: Total number of tasks
                  tasks:
                    type: array
                    items:
                      $ref: "./src/schemas/task.json"
    delete:
      tags:
        - tasks
      summary: Delete tasks from database
      description: Operation Index - 0022
      operationId: deleteTasksForManagement
      parameters:
        - in: query
          name: url
          description: URL string want to search
          schema:
            type: string
      requestBody:
        description: Pause all passed Tasks
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                description: Tasks Global Id
      responses:
        204:
          description: Delete successful
  /apis/manangement/tasks/pause:
    post:
      tags:
        - tasks
      summary: Pause all matched tasks.
      description: Operation Index - 0020. **ids** priority high than **query parameters(`url`)**, if you pass both, only **ids** will be executed
      operationId: pauseTasksForManagement
      parameters:
        - in: query
          name: url
          description: URL string want to search
          schema:
            type: string
      requestBody:
        description: Pause all passed Tasks
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                description: Tasks Global Id
      responses:
        204:
          description: Pasuse all tasks successful
  /apis/manangement/tasks/resume:
    post:
      tags:
        - tasks
      summary: Get tasks
      description: Operation Index - 0021. **ids** priority high than **query parameters(`url`)**, if you pass both, only **ids** will be executed
      operationId: resumeTasksForManagement
      parameters:
        - in: query
          name: url
          description: URL string want to search
          schema:
            type: string
      requestBody:
        description: Resume all passed Tasks
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                description: Tasks Global Id
      responses:
        204:
          description: Resume all tasks successful
  /apis/tasks:
    get:
      tags:
        - tasks
      summary: Get tasks for producers to execute
      description: Operation Index - 0005
      operationId: getTasks
      parameters:
        - in: query
          name: type
          required: true
          description: Producer Type
          schema:
            type: string
            enum:
              - HEADLESSBROWSER
              - HTTP
        - in: query
          name: gid
          required: true
          description: Producer Global Id
          schema:
            $ref: "#/components/schemas/GlobalId"
        - in: query
          name: limit
          description: How many tasks want to get
          schema:
            type: number
        - in: query
          name: permission
          description: permisson for this producer
          schema:
            type: string
            default: public
            enum:
              - private
              - public
      responses:
        200:
          description: Tasks for collected
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./src/schemas/task.json"
    post:
      tags:
        - tasks
      summary: Add tasks to collecting list
      description: Operation Index - 0006
      operationId: addTasks
      requestBody:
        description: Need to collect tasks
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "./src/schemas/task.json"
      responses:
        200:
          description: Extract tasks successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddSuccess"
        404:
          description: Cannot find specific Retailer, please make sure you registered
    put:
      tags:
        - tasks
      summary: Update tasks
      description: Operation Index - 0007
      operationId: updateTasks
      requestBody:
        description: Update tasks
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                allOf:
                  - $ref: "./src/schemas/task.json"
                  - type: object
                    properties:
                      operation:
                        type: string
                        description: what kind of operation want to do to this task. This will not be save to Task.
                        default: DELETE
                        enum:
                          - DELETE
                          - UPDATE
      responses:
        200:
          description: Extract tasks successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddSuccess"
        404:
          description: Cannot find specific Retailer, please make sure you registered
    delete:
      tags:
        - tasks
      summary: Delete tasks from collecting list
      description: Operation Index - 0008
      operationId: deleteTasks
      parameters:
        - in: query
          name: gids
          description: Tasks' Global Id that want to delete
          schema:
            type: array
            items:
              $ref: "#/components/schemas/GlobalId"
      responses:
        204:
          description: Update Retailer successful
  /health:
    get:
      tags:
        - server
      summary: Check BitSky's health status
      description: Operation Index - 0009
      operationId: checkHealth
      responses:
        200:
          description: Retailer is active
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthStatus"
components:
  schemas:
    GlobalId:
      type: string
      description: Global unique id.
      example: ef72448b-7bc4-42d1-9436-822c9634d943
    Cursor:
      type: string
      description: Cursor for pagination
    AddSuccess:
      type: object
      properties:
        successful:
          type: array
          description: Successful Task global_id
          items:
            $ref: "#/components/schemas/GlobalId"
        fail:
          type: array
          description: Fail Task global_id
          items:
            $ref: "#/components/schemas/GlobalId"
    HealthStatus:
      type: object
      properties:
        name:
          type: string
          description: BitSky Name
          example: "bitsky"
        description:
          type: string
          description: BitSky description.
          example: "Decentralized Task Agency"
        version:
          type: string
          description: BitSky version
          example: "0.0.1"
        migrationVersion:
          type: string
          description: BitSky currently migrationVersion
          example: 1
    Error:
      type: object
      properties:
        stack:
          type: string
          description: Error stack, return to UI only in develop mode
        message:
          type: string
          description: Error Message
        statusCode:
          type: number
          description: HTTP Status Code
        code:
          type: string
          description: Error Code
        data:
          type: object
          description: Additional data for this error
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-KEY
      in: header
