openapi: 3.0.1
info:
  title: DIA
  description: Decentralized Intelligence Agency
  termsOfService: http://swagger.io/terms/
  contact:
    email: shaokexu@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: http://localhost:9099/
tags:
- name: soi
  description: Service of Intelligence
- name: dia
  description: Decentralized Intelligence Agency
- name: intelligences
  description: Intelligences want to collect
paths:
  /apis/sois:
    post:
      tags:
        - soi
      summary: Register a SOI
      operationId: registerSOI
      requestBody:
        description: Need to register SOI information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SOI'
      responses:
        200:
          description: Registered successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    description: Generate MongoDB Id
                  global_id:
                    $ref: '#/components/schemas/GlobalId'
        400:
          description: Bad request, the data pass isn't valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /apis/sois/{gid}:
    get:
      tags:
        - soi
      summary: Get a SOI
      operationId: getSOI
      parameters:
        - in: path
          name: gid
          required: true
          description: global_id of SOI
      responses:
        200:
          description: Get a SOI successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SOI'
        400:
          description: Bad request, the data pass isn't valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Cannot find specific SOI
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - soi
      summary: Update a SOI
      operationId: updateSOI
      parameters:
        - in: path
          name: gid
          required: true
          description: global_id of SOI
      requestBody:
        description: SOI information need to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SOI'
      responses:
        200:
          description: Update SOI successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    description: Generate MongoDB Id
                  global_id:
                    $ref: '#/components/schemas/GlobalId'
        404:
          description: Cannot find specific SOI
          content:
            application/json:
              schema:
                type: object,
                properties:
                  global_id:
                    $ref: '#/components/schemas/GlobalId'
    delete:
      tags:
        - soi
      summary: Unregister a SOI
      operationId: unregisterSOI
      parameters:
        - in: path
          name: gid
          required: true
          description: global_id of SOI
      responses:
        200:
          description: Delete SOI successful
          content:
            application/json:
              schema:
                type: object,
                properties:
                  global_id:
                    $ref: '#/components/schemas/GlobalId'
        404:
          description: Cannot find specific SOI
          content:
            application/json:
              schema:
                type: object,
                properties:
                  global_id:
                    $ref: '#/components/schemas/GlobalId'
  /apis/intelligences:
    post:
      tags:
        - intelligences
      summary: Add intelligences to collecting list
      operationId: addIntelligences
      requestBody:
        description: Need to collect intelligences
        required: true
        content:
          application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Intelligence'
      responses:
        200:
          description: Extract intelligences successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddSuccess'
        404:
          description: Cannot find specific SOI, please make sure you registered
    delete:
      tags:
        - intelligences
      summary: Delete intelligences from collecting list
      operationId: deleteIntelligences
      requestBody:
        description: Intelligences that need to be deleted
        required: true
        content:
          application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GlobalId'
      responses:
        200:
          description: Delete intelligences successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddSuccess'
  /health:
    get:
      tags:
        - dia
      summary: Check DIA's health status
      operationId: checkHealth
      responses:
        200:
          description: SOI is active
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
components:
  schemas:
    GlobalId:
        type: string
        format: base64
        description: Global unique id.
        example: ef72448b-7bc4-42d1-9436-822c9634d943
    AddSuccess:
      type: object
      properties:
        successful:
          type: array
          description: Successful Intelligence global_id
          items:
            $ref: '#/components/schemas/GlobalId'
        fail:
          type: array
          description: Fail Intelligence global_id
          items:
            $ref: '#/components/schemas/GlobalId'
        
    SOI:
      type: object
      required:
        - global_id
        - soi_name
        - base_url
      properties:
        global_id:
          $ref: '#/components/schemas/GlobalId'
        soi_name:
          type: string
          description: The name of SOI
        api_key:
          type: string
          description: API key that used to access SOI
        base_url:
          type: string
          description: Base URL for RESTFul APIs
        status:
          type: string
          description: SOI status
          enum:
            - ACTIVE
            - UNACTIVE
        health:
          type: object
          description: RESTFul API for check server's health status
          properties:
            method:
              type: string
              default: 'GET'
              description: HTTP request method
              enum:
                - GET
                - POST
                - PUT
                - DELETE
            path:
              type: string
              format: uri
              default: '/apis/health'
              description: path of RESTFul API for check server's health status
        intelligences:
          type: object
          description: RESTFul API for collected intelligences
          properties:
            method:
              type: string
              default: 'POST'
              description: HTTP request method
              enum:
                - GET
                - POST
                - PUT
                - DELETE
            path:
              type: string
              format: uri
              default: '/apis/intelligences'
              description: path of RESTFul API for check server's health status
    Intelligence:
      type: object
      description: Intelligence that agents collected
      required:
        - global_id
        - soi_gid
        - url
      properties:
        global_id:
          $ref: '#/components/schemas/GlobalId'
        soi_gid:
          type: string
          description: Global unique soi global_id.
          example: NDU4MSBidXJrZSBkcixzYW50YSBjbGFyYSxjYSw5NTA1NA==
        priority:
          type: number
          description: Priority of this intelligence.
        created_at:
          type: number
          description: Timestamp. When this intelligence job was created
          example: 1553974629109
        modified_at:
          type: number
          description: Timestamp. When this intelligence job was modified
          example: 1553974629109
        last_collected_at:
          type: number
          description: Timestamp. Last time collect this intelligence.
          example: 1553974629109
        started_at:
          type: number
          description: Timestamp. When this intelligence started to be collected
          example: 1553974619655
        ended_at:
          type: number
          description: Timestamp. When this intelligence finished collect
          example: 1553974629109
        status:
          type: string
          description: Status of this intelligence
          default: CONFIGURATED
          enum:
            - CONFIGURATED
            - FINISHED
            - RUNNING
            - FAILED
            - PAUSED
            - TIMEOUT
        suitable_agents:
          type: array
          default:
            - browserExtension
          items: 
            type: string
            enum:
              - browserExtension
              - headlessBrowser
              - service
        url:
          type: string
          description: Which URL need to collect intelligence
          format: uri
          example: https://json-schema.org
        data:
          type: object
          description: Collected intelligence data
          properties:
            html:
              type: string
              description: Collected HTML data
        metadata: 
          type: object
          description: Additional metadata for this intelligence    
    HealthStatus:
      type: object
      properties:
        name:
          type: string
          description: DIA Name
          example: "dia"
        description:
          type: string
          description: DIA description.
          example: "Decentralized Intelligence Agency"
        version:
          type: string
          description: DIA version
          example: "0.0.1"
        migrationVersion:
          type: string
          description: DIA currently migrationVersion
          example: 1
    Error:
      type: object
      properties:
        stack:
          type: string
          description: Error stack, return to UI only in develop mode
        message:
          type: string
          description: Error Message
        statusCode:
          type: number
          description: HTTP Status Code
        code:
          type: string
          description: Error Code
        data:
          type: object
          description: Additional data for this error
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-KEY
      in: header  