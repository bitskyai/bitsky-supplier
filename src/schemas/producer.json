{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://www.bitsky.ai/schemas/producer.json",
  "type": "object",
  "title": "Producer Schema",
  "version": "1.1.0",
  "additionalProperties": false,
  "required": [
    "globalId",
    "type",
    "name",
    "private",
    "concurrent",
    "pollingInterval",
    "maxWaitingTime",
    "maxCollect",
    "idelTime",
    "timeout",
    "maxRetry"
  ],
  "properties": {
    "system": {
      "description": "Following properties are updated by system, user cannot direct update them",
      "additionalProperties": false,
      "required": ["state", "version"],
      "properties": {
        "state": {
          "$ref": "#/definitions/state"
        },
        "version": {
          "$ref": "#/definitions/version"
        },
        "securityKey": {
          "$ref": "#/definitions/securityKey"
        },
        "created": {
          "$ref": "#/definitions/created"
        },
        "modified": {
          "$ref": "#/definitions/modified"
        },
        "lastPing": {
          "allOf": [
            {
              "$ref": "#/definitions/timestamp"
            },
            {
              "title": "Last Ping Time",
              "description": "When last time this producer ping BitSky server"
            }
          ]
        },
        "serialId": {
          "allOf": [
            {
              "$ref": "#/definitions/globalId"
            },
            {
              "title": "Connected Producer Serial Id",
              "description": "The unique serial id of connected producer"
            }
          ]
        }
      }
    },
    "_id": {
      "$ref": "#/definitions/_id"
    },
    "globalId": {
      "$ref": "#/definitions/globalId"
    },
    "type": {
      "$ref": "#/definitions/producerType"
    },
    "name": {
      "$ref": "#/definitions/name"
    },
    "description": {
      "$ref": "#/definitions/description"
    },
    "private": {
      "title": "Private Mode",
      "type": "boolean",
      "description": "Whether collect tasks that not created by yourself",
      "default": true
    },
    "permission": {
      "$ref": "#/definitions/permission"
    },
    "concurrent": {
      "title": "Concurrent Collect Tasks",
      "type": "integer",
      "description": "How many tasks need to be concurrent collected",
      "default": 1
    },
    "pollingInterval": {
      "title": "Polling Interval",
      "type": "integer",
      "description": "Unit: second. How frequently to check whether need to collect new tasks",
      "default": 30
    },
    "maxWaitingTime": {
      "title": "Max Waiting Time",
      "type": "integer",
      "description": "Unit: second. Max waiting time between two collecting jobs.",
      "default": 5
    },
    "maxCollect": {
      "title": "Max Collect Tasks",
      "type": "integer",
      "description": "**undefined** means infinity. Browser has memory leak issue if continue to open urls. To avoid this, need to close window when reach max collect times. Collect Time equal to how many request send to BitSky to get task."
    },
    "idelTime": {
      "title": "Producer Idel Time",
      "type": "integer",
      "description": "How long time browser need to wait to restart collect tasks after close browser window. This time is used for browser to release memory.",
      "default": 0
    },
    "timeout": {
      "title": "Request Timeout",
      "type": "integer",
      "description": "Unit: second. If the request takes longer than timeout, the request will be aborted",
      "default": 90
    },
    "maxRetry": {
      "title": "Max Retry Time",
      "type": "integer",
      "description": "Max retry time if send collected tasks fail, if retried max time, then it will send back to BitSky and mark those tasks fail",
      "default": 1
    },
    "baseURL": {
      "$ref": "#/definitions/url"
    },
    "health": {
      "type": "object",
      "required": ["method", "path"],
      "properties": {
        "method": {
          "allOf": [
            {
              "$ref": "#/definitions/method"
            },
            {
              "default": "GET"
            }
          ]
        },
        "path": {
          "allOf": [
            {
              "$ref": "#/definitions/path"
            },
            {
              "default": "/apis/health"
            }
          ]
        }
      }
    }
  },
  "definitions": {
    "_id": {
      "title": "ID",
      "description": "identifier of this entitle",
      "type": ["string", "object"]
    },
    "created": {
      "allOf": [
        {
          "$ref": "#/definitions/timestamp"
        },
        {
          "title": "Created at"
        }
      ]
    },
    "modified": {
      "allOf": [
        {
          "$ref": "#/definitions/timestamp"
        },
        {
          "title": "Last time modified at"
        }
      ]
    },
    "timestamp": {
      "type": ["integer", "null", "string"],
      "description": "Timestamp of when this task was assigned to an producer",
      "examples": [1553974629109]
    },
    "version": {
      "title": "Version",
      "description": "version of this producer",
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "default": "1.0.0",
      "examples": ["1.0.0"]
    },
    "globalId": {
      "title": "Global ID",
      "description": "globally unique identifier",
      "type": "string",
      "examples": ["59f43b55-46a3-4efc-a960-018bcca91f46"]
    },
    "producerType": {
      "title": "Producer Type",
      "type": "string",
      "description": "Producer type of this producer",
      "enum": ["HTTP", "HEADLESSBROWSER"]
    },
    "permission": {
      "type": "string",
      "description": "Decide whether this producer to accept public tasks. if it is **private**, then don't accept public tasks",
      "default": "PRIVATE",
      "enum": ["PRIVATE", "PUBLIC"]
    },
    "url": {
      "type": ["string", "null"],
      "format": "uri",
      "description": "Target URL for this task.",
      "examples": ["https://json-schema.org"]
    },
    "method": {
      "type": "string",
      "title": "HTTP Request Method",
      "description": "HTTP Request Method",
      "enum": ["GET", "POST", "PUT", "DELETE"]
    },
    "path": {
      "type": "string",
      "title": "URL Path",
      "description": "RESTFul path"
    },
    "name": {
      "title": "Name",
      "description": "Give a meaningful name",
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "examples": ["My Chrome Extension"]
    },
    "description": {
      "title": "Description",
      "description": "description of this producer",
      "type": ["string", "null"],
      "minLength": 0,
      "maxLength": 200,
      "examples": ["My chrome extension used for test purpose"]
    },
    "securityKey": {
      "title": "Security Key",
      "type": "string",
      "description": "Security key is used to identify different user"
    },
    "state": {
      "title": "State",
      "type": "string",
      "description": "State of this entitle",
      "enum": ["DRAFT", "CONFIGURED", "ACTIVE", "DELETED"]
    }
  }
}
